# This workflow will do a clean install of node dependencies, build the source
# code across multiple Node.js versions, and lint the project.

name: Build & Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  # Default version of Node.js for jobs
  node-version: "18"

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["18"]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      #- run: yarn run test TODO: Readd once we have tests

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - run: yarn install --frozen-lockfile
      - run: yarn run lint

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - run: |
          git config user.name "hehe"
          git config user.email "<>"
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      - run: |
          git fetch --all
          git switch release
          rm -r scripts/
          mv KoLmafia/scripts scripts
      - run: |
          git add scripts/
          {
            git commit -m "${{github.event.commits[0].message}}"
            git push origin release
          } || exit 0
